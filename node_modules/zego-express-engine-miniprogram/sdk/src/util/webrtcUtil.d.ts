import { CapabilityDetection, CapabilityDetectionSingle, Constraints, SupportVideoCodeSucCall, ZegoCheckSingleType, ConstraintExtend } from "../common/zego.entity";
export declare class WebRTCUtil {
    static supportDetection(screenShotReady: boolean, success: (result: CapabilityDetection | CapabilityDetectionSingle) => void, checkLevel: 0 | 1, type?: ZegoCheckSingleType): Promise<void>;
    static supportVideoCodeType(sucCall: SupportVideoCodeSucCall, checkLevel: 0 | 1, type?: "webRTC" | "VP8" | "H264" | "newWay"): Promise<void>;
    static checkScreenParams(screen: Constraints["screen"], errorCallback: Function): boolean;
    static checkCameraParams(cameras: {
        width?: number | ConstraintExtend;
        height?: number | ConstraintExtend;
        frameRate?: number | ConstraintExtend;
        bitRate?: number;
    }, errorCallback: Function): boolean;
    static base64ToUint8Array(base64String: string): Uint8Array;
    static decodeString(u8arr: Uint8Array): string;
    static encodeString(str: string): Uint8Array;
}

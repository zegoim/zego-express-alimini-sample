export declare const errorCodeList: {
    NOT_LOGIN: {
        code: number;
        message: string;
    };
    STREAMID_TOO_LONG: {
        code: number;
        message: string;
    };
    STREAM_ID_NULL: {
        code: number;
        message: string;
    };
    STREAM_ID_INVALID_CHARACTER: {
        code: number;
        message: string;
    };
    NETWORK_BROKEN: {
        code: number;
        message: string;
    };
    LOCALSTREAM_WRONG: {
        code: number;
        message: string;
    };
    INPUT_PARAM: {
        code: number;
        message: string;
    };
    TIMEOUT: {
        code: number;
        message: string;
    };
    SOCKET_CLOSE: {
        code: number;
        msg: string;
    };
    INIT_SDK_WRONG: {
        code: number;
        message: string;
    };
    WX_GET_SETTING_FAIL: {
        code: number;
        message: string;
    };
    GET_CONFIG_FAIL: {
        code: number;
        message: string;
    };
    MODULE_NOT_IMPORTED: {
        code: number;
        message: string;
    };
    RTC_LOGIN_ERROR: {
        code: number;
        message: string;
    };
    RTC_HB_ERROR: {
        code: number;
        message: string;
    };
    USER_ID_NULL: {
        code: number;
        message: string;
    };
    USER_ID_INVALID_CHARACTER: {
        code: number;
        message: string;
    };
    USER_ID_TOO_LONG: {
        code: number;
        message: string;
    };
    USER_NAME_NULL: {
        code: number;
        message: string;
    };
    USER_NAME_TOO_LONG: {
        code: number;
        message: string;
    };
    ROOM_ID_NULL: {
        code: number;
        message: string;
    };
    ROOM_ID_INVALID_CHARACTER: {
        code: number;
        message: string;
    };
    ROOM_ID_TOO_LONG: {
        code: number;
        message: string;
    };
    ROOM_NOT_EXIST: {
        code: number;
        msg: string;
    };
    LOGIN_TIMEOUT: {
        code: number;
        message: string;
    };
    ROOM_MAX_USER_COUNT: {
        code: number;
        message: string;
    };
    MULTIPLE_LOGIN_KICKOUT: {
        code: number;
        message: string;
    };
    ROOM_RETRY_TIMEOUT: {
        code: number;
        message: string;
    };
    MANUAL_KICKOUT: {
        code: number;
        message: string;
    };
    ROOM_INNER_ERROR: {
        code: number;
        message: string;
    };
    HEARTBEAT_TIMEOUT: {
        code: number;
        message: string;
    };
    PARSE_JSON_ERROR: {
        code: number;
        message: string;
    };
    LOGIN_PROCESSING: {
        code: number;
        message: string;
    };
    LIVEROOM_REQUEST_ERROR: {
        code: number;
        message: string;
    };
    ZPUSH_REQUEST_FAIL: {
        code: number;
        message: string;
    };
    LOGIN_STATE_WRONG: {
        code: number;
        message: string;
    };
    TOKEN_ERROR: {
        code: number;
        message: string;
    };
    DISPATCH_ERROR: {
        code: number;
        message: string;
    };
    TOKEN_EXPIRED: {
        code: number;
        message: string;
    };
    SUBCMD_ERROR: {
        code: number;
        message: string;
    };
    ZEGO_AUTH_ERROR: {
        code: number;
        message: string;
    };
    BIZ_CHANNEL_ERROR: {
        code: number;
        message: string;
    };
    DISPATCH_TIMEOUT: {
        code: number;
        message: string;
    };
    CONNECT_FAILED: {
        code: number;
        message: string;
    };
    PUBLISHER_MEDIA_SERVER_FORBID: {
        code: number;
        message: string;
    };
    PUBLISHER_EXTRA_INFO_TOO_LONG: {
        code: number;
        message: string;
    };
    PUBLISHER_PARAM: {
        code: number;
        message: string;
    };
    PUBLISHER_BROWSER_NOT_SUPPORT: {
        code: number;
        message: string;
    };
    PUBLISHER_DISPATCH_FAIL: {
        code: number;
        message: string;
    };
    PUBLISHER_SCREEN_FAILED: {
        code: number;
        message: string;
    };
    ENUMERATE_DEVICES_FAIL: {
        code: number;
        message: string;
    };
    PUBLISHER_DISPATCH_REQUEST_FAIL: {
        code: number;
        message: string;
    };
    PUBLISHER_SESSION_REQUEST_FAIL: {
        code: number;
        message: string;
    };
    PUBLISHER_CREATE_OFFER_ERROR: {
        code: number;
        message: string;
    };
    PUBLISHER_SET_LOCAL_DESC_ERROR: {
        code: number;
        message: string;
    };
    PUBLISHER_MEDIA_DESC_ERROR: {
        code: number;
        message: string;
    };
    PUBLISHER_SET_REMOTE_DESC_ERROR: {
        code: number;
        message: string;
    };
    PUBLISHER_CANDIDATE_ERROR: {
        code: number;
        message: string;
    };
    PUBLISHER_SESSION_CLOSED: {
        code: number;
        message: string;
    };
    PUBLISHER_MEDIA_CONNECTION_ERROR: {
        code: number;
        message: string;
    };
    PUBLISHER_SERVER_NEGO_TIMEOUT: {
        code: number;
        message: string;
    };
    PUBLISH_DEVICE_OUT_ERR: {
        code: number;
        message: string;
    };
    PUBLISH_SCREEN_CANCELED: {
        code: number;
        message: string;
    };
    PUBLISH_SCREEN_NOT_SUPPORT: {
        code: number;
        message: string;
    };
    PUBLISH_NO_PREVIEW: {
        code: number;
        message: string;
    };
    REPEATED_PULL: {
        code: number;
        message: string;
    };
    PUBLISHER_WEBSOCKET_DISCONNECTED: {
        code: number;
        message: string;
    };
    PUBLISHER_RETRY_TIMEOUT: {
        code: number;
        message: string;
    };
    PUBLISHER_HTTPS_REQUIRED: {
        code: number;
        message: string;
    };
    PUBLISHER_NO_PREVIEW: {
        code: number;
        message: string;
    };
    PUBLISHER_STREAM_NO_FOUND: {
        code: number;
        message: string;
    };
    PUBLISHER_IS_PUBLISHING: {
        code: number;
        message: string;
    };
    PUBLISHER_CLIENT_IP_CHANGED: {
        code: number;
        message: string;
    };
    PUBLISHER_TTL_OVERTIME: {
        code: number;
        message: string;
    };
    PUBLISHER_SESSION_TIMEOUT: {
        code: number;
        message: string;
    };
    PUBLISHER_GET_USER_MEDIA_FAIL: {
        code: number;
        message: string;
    };
    PUBLISHER_DEVICE_NO_ALLOWED: {
        code: number;
        message: string;
    };
    PUBLISHER_DEVICE_NO_READABLE: {
        code: number;
        message: string;
    };
    PUBLISHER_OVER_CONSTRAINED: {
        code: number;
        message: string;
    };
    PUBLISHER_UPDATE_SDP_TIMEOUT: {
        code: number;
        message: string;
    };
    PUBLISHER_UPDATE_SDP_FAIL: {
        code: number;
        message: string;
    };
    VIDEO_EFFECT_IS_STARTING: {
        code: number;
        message: string;
    };
    PUBLISHER_NET_PROBE_POOR: {
        code: number;
        message: string;
    };
    PLAYER_PARAM: {
        code: number;
        message: string;
    };
    PLAYER_DISPATCH_REQUEST_FAIL: {
        code: number;
        message: string;
    };
    PLAYER_SESSION_REQUEST_FAIL: {
        code: number;
        message: string;
    };
    PLAYER_CREATE_OFFER_ERROR: {
        code: number;
        message: string;
    };
    PLAYER_SET_LOCAL_DESC_ERROR: {
        code: number;
        message: string;
    };
    PLAYER_MEDIA_DESC_ERROR: {
        code: number;
        message: string;
    };
    PLAYER_SET_REMOTE_DESC_ERROR: {
        code: number;
        message: string;
    };
    PLAYER_CANDIDATE_ERROR: {
        code: number;
        message: string;
    };
    PLAYER_SESSION_CLOSED: {
        code: number;
        message: string;
    };
    PLAYER_MEDIA_CONNECTION_ERROR: {
        code: number;
        message: string;
    };
    PLAYER_WEBSOCKET_DISCONNECTED: {
        code: number;
        message: string;
    };
    PLAYER_SERVER_NEGO_TIMEOUT: {
        code: number;
        message: string;
    };
    PLAYER_RETRY_TIMEOUT: {
        code: number;
        message: string;
    };
    PLAYER_IS_PLAYING: {
        code: number;
        message: string;
    };
    PLAYER_CLIENT_IP_CHANGED: {
        code: number;
        message: string;
    };
    PLAYER_TTL_OVERTIME: {
        code: number;
        message: string;
    };
    PLAYER_SESSION_RESET: {
        code: number;
        message: string;
    };
    PLAYER_SESSION_TIMEOUT: {
        code: number;
        message: string;
    };
    PLAYER_PROBE_TIMEOUT: {
        code: number;
        message: string;
    };
    PLAYER_UNSUPPORTED_PROTOCOL: {
        code: number;
        message: string;
    };
    PLAYER_STREAM_NOT_EXIST: {
        code: number;
        message: string;
    };
    PLAYER_NET_PROBE_POOR: {
        code: number;
        message: string;
    };
    DEVICE_ERROR_TYPE_UNPLUGGED: {
        code: number;
        message: string;
    };
    IM_CONTENT_NULL: {
        code: number;
        message: string;
    };
    IM_CONTENT_TOO_LONG: {
        code: number;
        message: string;
    };
    IM_SEND_FAILED: {
        code: number;
        message: string;
    };
    FREQ_LIMITED: {
        code: number;
        message: string;
    };
    SET_ROOM_SCENARIO: {
        code: number;
        message: string;
    };
};
